  body {
    font-family: 'Open Sans', Arial, sans-serif;
    font-weight: lighter;
    color: #cbd6e7;
    background-color: black;
    padding-left: 25px;
    padding-right: 25px;
    padding-bottom: 25px;
    min-height: 100%;
    overflow-x: hidden; /* Hide scrollbars */
  }


/* flex box for nav */
    .Container {
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
      justify-content: flex-start;
    }

    .ContainerRight {
      display: flex;
      flex-direction: row-reverse;
      flex-wrap: nowrap;
      justify-content: right;
    }

  header {
    height: 100%;
    margin: 20px auto;
  }

  .profile {
      /*   profile image property */
    border-radius: 50%;
    border: 3px solid #808080;
    margin-top: .5em;
  }

  .portfoliothumb {
          /*   profile image property */
  }

  .intro {
    font: 1rem 'Open Sans', Arial, sans-serif;
  }

  p {

}

  h1 {
    line-height: 55px;
    font: 2rem 'Architects Daughter', cursive;
    letter-spacing: 3px;
    color: red;
}

  .reverse {
    display: block;
    transform: rotateY(180deg);
}


  h2 {
    line-height: 55px;
    font: 1.5rem 'Architects Daughter', cursive;
    letter-spacing: 3px;
    color: white;
  }

  /* nav list */
  nav {
    font: 1rem 'Architects Daughter', cursive;
    display: inline-block;
    margin: 0px;
}

  nav ul {
    display: flex;
    list-style-type: none;
    justify-content: flex-start;
  }

  li {
    color: white;
    margin-right: 10px;
    margin-left: 10px;
  }

  li a {
    color: white;
    text-decoration: none;
  }

  ul > li:last-child > a:hover {
    text-decoration:underline;
    text-decoration-style: dashed;
  }


  /* add psudo element icon*/
  li::before {
    content: "\003C";
    color: red;
    margin-right: 5px;
    margin-left: 5px;
    font-size: 1rem;
    font-weight: 900;
  }

  li:after {
    content: "\003E";
    color: red;
    margin-right: 5px;
    margin-left: 5px;
    font-size: 1rem;
    font-weight:900;
  }

  /* remove psudo element */
  li.none::before {
   display: none;
 }

  li.none::after {
   display: none;
}

  /* Change the link color to #111 (black) on hover */
  li a.hvr-wobble-vertical:hover {
    background-color: ;
    padding-left: ;
    padding-right: ;
  }

  li a:hover .tooltip {

  }

  /* FontAwesome */
  div.fontawesomebg {
   }



  div.fontawesomebg:before {
    position:absolute;
    z-index: -1;
    font-family: FontAwesome;
    font-size: 400px;
    color: #0b0b0b;

    right: 0;
    bottom: 0;
    content: "\f060";
  }


  /* Container for our tooltip */
  .tooltip { /* Container for our tooltip */
    transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
  }

  /* This is for the tooltip text */
.tooltiptext {
    visibility: hidden;
    width: 25px;
    color: #FFFF00;
    font-size: 2rem;
    padding-left: 20px;
    margin-left: 10px;
    margin-top: 0px;
    border-radius: 5px;  /* This defines tooltip text position */
    position: absolute;
    z-index: 1;
    overflow: hidden;
    transition-duration: .5s;
}


  /* Makes tooltip text visible when text is hovered on */
  .tooltip:hover .tooltiptext {
    visibility: visible;
    overflow: hidden;
    transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
  }

  footer {
    font-size: .7rem;
}

  #footer {
    position: absolute;
    bottom: 0;
  }


/*   multi color bkg animation   */
  .muticolorbkg {
    animation: animateBg 20s linear infinite;
    background-image: linear-gradient(0deg,#cf5c5c,#c19b4a,#def2a0,#c6ee4a,#42eca6,#64b3d9,#208ea2,#498ada,#5b73df,#897ed3,#cf5c5c,#c19b4a);
    background-size: 100% 1100%;
    height: 100vh;
  }

  @keyframes animateBg {
    0% { background-position: 0% 0%; }
    100% { background-position: 0% 100%; }
  }


  /*   pulsating circle */

  .pulse {
    animation: none;
    display: block;
    width: 32px;
    height: 32px;
  }

  .pulse:hover {
    animation: pulse 2s infinite;
    border-radius: 100%;
    background: deepskyblue;
    cursor: pointer;
    box-shadow: 0 0 0 rgba(15,210,246, 0.4);
  }

  @keyframes pulse {
    0% {
      -moz-box-shadow: 0 0 0 0 rgba(15,210,246, 0.4);
      box-shadow: 0 0 0 0 rgba(15,210,246, 0.4);
    }
    70% {
        -moz-box-shadow: 0 0 0 30px rgba(15,210,246, 0);
        box-shadow: 0 0 0 30px rgba(15,210,246, 0);
    }
    100% {
        -moz-box-shadow: 0 0 0 0 rgba(15,210,246, 0);
        box-shadow: 0 0 0 0 rgba(15,210,246, 0);
    }
  }


  /* Nav animation - Wobble vertical */
  @-webkit-keyframes hvr-wobble-translateY {
    16.65% {
      -webkit-transform: translateY(8px);
      transform: translateY(8px);
    }
    33.3% {
      -webkit-transform: translateY(-6px);
      transform: translateY(-6px);
    }
    49.95% {
      -webkit-transform: translateY(4px);
      transform: translateY(4px);
    }
    66.6% {
      -webkit-transform: translateY(-2px);
      transform: translateY(-2px);
    }
    83.25% {
      -webkit-transform: translateY(1px);
      transform: translateY(1px);
    }
    100% {
      -webkit-transform: translateY(0);
      transform: translateY(0);
    }
  }
  @keyframes hvr-wobble-vertical {
    16.65% {
      -webkit-transform: translateY(8px);
      transform: translateY(8px);
    }
    33.3% {
      -webkit-transform: translateY(-6px);
      transform: translateY(-6px);
    }
    49.95% {
      -webkit-transform: translateY(4px);
      transform: translateY(4px);
    }
    66.6% {
      -webkit-transform: translateY(-2px);
      transform: translateY(-2px);
    }
    83.25% {
      -webkit-transform: translateY(1px);
      transform: translateY(1px);
    }
    100% {
      -webkit-transform: translateY(0);
      transform: translateY(0);
    }
  }

  .hvr-wobble-vertical {
    display: inline-block;
    vertical-align: middle;
    -webkit-transform: perspective(1px) translateZ(0);
    transform: perspective(1px) translateZ(0);
  }

  .hvr-wobble-vertical:hover, .hvr-wobble-vertical:focus, .hvr-wobble-vertical:active {
    -webkit-animation-name: hvr-wobble-vertical;
    animation-name: hvr-wobble-vertical;
    -webkit-animation-duration: 1s;
    animation-duration: 1s;
    -webkit-animation-timing-function: ease-in-out;
    animation-timing-function: ease-in-out;
    -webkit-animation-iteration-count: 1;
    animation-iteration-count: 1;
  }

    /* contact form */
    button, input, select, textarea {
      font-family: inherit;
      font-size: 100%;
      box-sizing: border-box;
      display: block;
      width: 100vh;
      margin: 1rem 0px 1rem 0px;
    }

    input[type="submit"] {
      width: 100%;
      background-color: #03a3df;
      border: none;
      color: white;
      padding: 16px 32px;
      text-decoration: none;
      margin: 30px 2px;
      cursor: pointer;
      width: 200px;
    }

    input[type="submit"]:hover {
    	background: rgba(3, 163, 233, 0.5);
    }

    input[type="submit"]:active {
      background: blue;
    }

    input:focus {
      outline: 0;
      box-shadow: 0 0 0 3px rgba(0, 123, 255, .5);
    }

    input {
      border-radius: 5px;
    }

    input[type="radio"] {

    }

    /* The container for form */
    .container {
      display: block;
      position: relative;
      padding-left: 35px;
      margin-bottom: 10px;
      cursor: pointer;
      font-size: 1rem;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    /* Hide the browser's default radio button */
    .container input {
      position: absolute;
      opacity: 0;
      cursor: pointer;
    }

    /* Create a custom radio button */
    .checkmark {
      position: absolute;
      top: 0;
      left: 0;
      height: 20px;
      width: 20px;
      background-color: #eee;
      border-radius: 50%;
    }

    fieldset {
      border: none;
      padding: 0px 20px 20px 0px;
    }

    /* On mouse-over, add a grey background color */
    .container:hover input ~ .checkmark {
      background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .container input:checked ~ .checkmark {
      background-color: #2196F3;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
      content: "";
      position: absolute;
      display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .container input:checked ~ .checkmark:after {
      display: block;
    }

    /* Style the indicator (dot/circle) */
    .container .checkmark:after {
      top: 5px;
      left: 5px;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background: white;
    }
